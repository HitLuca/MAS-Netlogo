;cleans the bus inbox
to clean-inbox-order
  let ind 0
  let handled []
  
  while[ind < length inbox ] [
    let msg_type item 0 item 2 item ind inbox
    if msg_type = "insufficient-capacity"[ set handled lput (item ind inbox) handled ]
    set ind (ind + 1)
  ]
end

;message handling routine
to handle-messages
  let ind 0
  let handled []
  let bus_counter length fixed_buses + length independent_buses
  let help_requests []
  let taken false
  let taken_buses []
  
  while[ind < length inbox ][
    ;if not member? item ind inbox inbox_read [ ;TO BE ADDED so we ignore messagfes that were already read. (ludacris)
    let message item 2 item ind inbox
    let sender item 1 item ind inbox
    let msg_tick item 0 item ind inbox
    let msg_type item 0 message
    
    
    if msg_type = "init"[
      set independent true
      set mother_station item 1 message
      set fixed_buses item 2 message
      set independent_buses item 3 message
      set handled lput (item ind inbox) handled
    ]
    
    if msg_type = "redirect"[
      set mother_station item 1 message
      set going_in_service true
      set handled lput (item ind inbox) handled
      let dist_to_closest 0
      
      
      let station current_stop
      if current_stop = -1[
        ifelse previous_stop = -1
        [set dist_to_closest  measure-distance 3 next_stop]
        [set dist_to_closest  measure-distance 3 next_stop]
        set station next_stop]
      let dist dist_to_closest + measure-distance station mother_station
      
      send-message (item 0 (item mother_station fixed_buses)) lput dist ["confirm-redirect"]
    ]
    
    if msg_type = "ask-help"[
      let destination item 1 message
      let preferences item 2 message
      
      let i 0
      while[i < length preferences and member? (item i preferences) taken_buses]
      [
        set i i + 1
      ]
      
      ifelse i < length preferences
      [
        send-message  (item i preferences) lput destination ["redirect"]
        set taken_buses lput (item i preferences) taken_buses
      ]
      [
        send-message leader lput 2 lput destination ["order"]
      ]
      set handled lput (item ind inbox) handled
    ]
    
;    if msg_type = "ask-redirect"
;    [
;      if not taken
;      [
;        send-message sender ["confirm-redirect"]
;        set taken true
;      ]
;      set handled lput (item ind inbox) handled
;    ]
    
    
    if msg_type = "confirm-redirect"[
      set wait_help_delay item 1 message
;      set help_candidates lput sender help_candidates
      set handled lput (item ind inbox) handled
    ]

    if msg_type = "new-independent"[
      set independent_buses lput (item 1 message) independent_buses
      set handled lput (item ind inbox) handled
    ]
    
    if msg_type = "new-fixed"[
      let new_f lput (item 1 message) lput sender []
      set fixed_buses lput new_f fixed_buses
      set independent_buses remove sender independent_buses
      
      set handled lput (item ind inbox) handled
    ]
        
    if msg_type = "order"[
      ifelse not member? (item ind inbox) pending_orders
      [
        add-bus (item 2 message)
        let new_bus_id (bus_counter + 25)
;        show new_bus_id
        set new_buses lput new_bus_id new_buses
        set pending_orders lput (item ind inbox) pending_orders
        set bus_counter (bus_counter + 1)
      ]
      [
        let sender_mother_station item 1 message
        send-message (item 0 new_buses ) lput independent_buses lput fixed_buses lput sender_mother_station ["init"]
        ;send-message sender lput (item 0 new_buses ) ["new-companion"]
        
        set independent_buses lput (item 0 new_buses) independent_buses
        foreach fixed_buses[
          let id item 0 ?
          if not (id = bus_id)[
            send-message id lput (item 0 new_buses ) ["new-independent"]
          ]; let everyone know there's a new independent bus and its ID
        ]
        
        set pending_orders remove-item 0 pending_orders
        set new_buses remove item 0 new_buses new_buses
        set handled lput (item ind inbox) handled
      ]
    ]
    
    if msg_type = "ask-support"[
      if not going_in_service[
        let to_sender_station item 1 message
        let from current_stop
        if current_stop = -1[
          set from next_stop
        ]
        
        let dist measure-distance from to_sender_station
        
        let free_seats (get-capacity - length bus_passengers)
        
        if dist <= help_distance_threshold
        [
          send-message sender lput free_seats lput dist ["info-support"]
        ]
      ]
      set handled lput (item ind inbox) handled
    ]
    
    if msg_type = "info-support"[
      let dist item 1 message
      let free_seats item 2 message
      set help_candidates lput (lput free_seats lput dist lput sender []) help_candidates
      
      set handled lput (item ind inbox) handled
    ]
    
    if msg_type = "insufficient-capacity"[ ;recived only by the leder of the station, sent also by itself (could work around it, for sure)
      ifelse (ticks - msg_tick) < 10[
        set help_requests lput (item 1 message) help_requests
      ]
      [
        set handled lput (item ind inbox) handled
      ]
    ]
    

    
;    foreach message
;    [
;      let submessage ?
;      let msg_type item 0 submessage
;      if msg_type = "init"
;      [
;        set mother_station item 1 submessage
;        set handled lput ind handled
;        ]
;      ]

    set ind (ind + 1)
  ]
  
  if length inbox > 0 [ show inbox ]
      
  foreach handled[ set inbox remove ? inbox ] ;set inbox_read lput ? inbox_read TO BE ADDED so we do not delete messages
  
  if length help_requests > 0[ ;if there were help requests run the procedure to see if a new bus is needed
    bus-needed? help_requests
  ]
  
  if item 0 asked_support [
    if item 1 asked_support + 2 < ticks [
      let preferences get-redirect-preferences
      ifelse preferences = [][
        send-message leader lput 2 lput mother_station ["order"]
      ]
      [
        send-message leader lput preferences lput mother_station ["ask-help"]
      ]
       set asked_support [false 0]
    ]
  ]  
end